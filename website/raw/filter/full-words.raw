<h1>Filter on full words</h1>

<p>Matches when one of the filtered words is found in the text extract
of the page.  When you want to search for parts of words, you must use
the filter which matches text.</p>

<p>This filter has one option: <code>case_sensitive</code>
(default <code>false</code>: defaults to case-insensitive matching).</p>

--right
[% INCLUDE $list_incl %]

--left
<h2>Hit information</h2>

<p>The filter will produce a Hit for every word which is found in the
text, removing duplicates.</p>

<p>When the match is case-sensitive (not the default), every word will
be shown as this Hit:</p>

<JSON>
{ "rule": "full word", "word": "Pizza" }
</JSON>

<p>When your match is case-<b>in</b>sensitive (the default behavior),
the word is returned with the casing you provided: it does not show the
detected capitalization.  Each Hit looks like this:</p>

<JSON>
{ "rule": "full word-i", "word": "Pizza" }
</JSON>

--right
<h2>Characters with various notations</h2>

<p>There is a big issue with none-ASCII characters: they usually have
many different ways to write them.  For instance, when you would like
to find the city of MÃ¼nchen in HTML, there are four options</p>

<PLAIN copy>
M\N{LATIN SMALL LETTER U WITH CIRCUMFLEX}nchen
Mu\N{COMBINING CIRCUMFLEX ACCENT}nchen
Muenchen
Munchen           # lazy author
</PLAIN>

<p>Some words have many of these, so only a regular expression can help
you here.  Use the text match filter with a pattern like this:</p>

<HEADER>Linenumbers just as example</HEADER>
<PLAIN copy nrs>
\b M (?:
     u |
     ue |
     \N{LATIN SMALL LETTER U WITH CIRCUMFLEX} |
     u\N{COMBINING CIRCUMFLEX ACCENT}
     ) nchen \b
</PLAIN>

